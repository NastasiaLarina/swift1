import UIKit

//1. Написать функцию, которая определяет, четное число или нет.
func chetnoe(number: Int) {
    if number % 2 == 0 {
      print("\(number) Четное число")
    } else {
      print("\(number) Нечетное число")
    }
}


//2. Написать функцию, которая определяет, делится ли число без остатка на 3.
/*#include <stdio.h>*/
func div2(number1: Int) {
     let  a = number1
     let b = a%3
     _ = b == 0 ? print("Делится на 3") : print("Не делиться на 3")
 }


//3. Создать возрастающий массив из 100 чисел.
var numbers :Array<Int> = Array<Int>()
for i in 0...99{
numbers.append(i)
}
print(numbers)

//  или

var array = [Int]()
var i = 0
while i<100 {
    array.append(i+1)
    i += 1
}
print(array)


//4. Удалить из этого массива все четные числа и все числа, которые не делятся на 3.
for element in array where (element%2 == 0) || (element%3 == 0) {
    array.remove(at : (array.index(of: element)!))// не понимаю почему тут xcode матерится
}
print(array)


/*5. * Написать функцию, которая добавляет в массив новое число Фибоначчи, и добавить при помощи нее 100 элементов. Числа Фибоначчи определяются соотношениями Fn=Fn-1 + Fn-2.*/
func newFibonaci (n: Int) -> (Decimal) {
    if (n<3) {
        return 1
    } else {
        var  x1 : Decimal = 1, x2 : Decimal = 1, x: Decimal
        for _ in 3...n {
            x = x1+x2
            x1 = x2
            x2 = x
        }
        return x2
    }
}
var arrayFibonaci = [Decimal]()
arrayFibonaci.append(0)
var number  = 100 //количество элементов
for i in 1...number{
    arrayFibonaci.append(newFibonaci(n: i))
}
print(arrayFibonaci)



/*6. * Заполнить массив из 100 элементов различными простыми числами. Натуральное число, большее единицы, называется простым, если оно делится только на себя и на единицу. Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
a. Выписать подряд все целые числа от двух до n (2, 3, 4, ..., n).
b. Пусть переменная p изначально равна двум — первому простому числу.
c. Зачеркнуть в списке числа от 2 + p до n, считая шагом p..
d. Найти первое не зачёркнутое число в списке, большее, чем p, и присвоить значению переменной p это число.
e. Повторять шаги c и d, пока возможно.*/

//это задание пока не смогла сделать//
